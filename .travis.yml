# sudo 관리자 권한
sudo: required

# 언어(플랫폼)를 선택
language: generic

# 도커 환경 구성
services:
  - docker

# 스크립트 실행전 (=이미지 생성)
before_install:
  - echo "start creating an image with dockerfile"
  - cd 3rd-single-container
  - docker build -t 3rd-app-test -f Dockerfile.dev ./

# 실행할 스크립트(=테스트)
script:
  - docker run -e CI=true 3rd-app-test npm run test -- --coverage

# 테스트 성공후 할일
after_success:
  - echo "test success!"

# EB 배포
# 도커 이미지를 Travis CI에서 생성 
# ====>  도커 허브 저장 
# ====> 도커 이미지를 AWS EB에서 받아서 이미지로 컨테이너 생성
# ====> 컨테이너 안에서 앱 실행 입니다 !!

deploy:
  # http://beanstalktestapp-env.eba-zu4jkbwe.ap-northeast-2.elasticbeanstalk.com/
  # 외부 서비스 표시( s3 / elasticbeanstalk / firebase ''')
  provider: elasticbeanstalk
  region: "ap-northeast-2"
  app: "beanstalk-test-app"
  env: "Beanstalktestapp-env"

  # travis ci에서 가지고 있는 파일을 압축해서 s3로 보낸다.
  # elasticbeanstalk 생성시에, s3 bucket 이 자동 생성된다.
  bucket_name: "travisci-aceess-test"
  bucket_path: "beanstalk-test-app"
  on:
    # 어떤 브랜치에 push를 할때 AWS에 배포를 할것인지.
    branch: master

  # travis.com -> 해당 프로젝트 -> setting 에 환경변수 설정
  access_key_id: $aws-access-key
  secret_access_key_id: $aws-secret-access-key
